@using System.Reflection
@using Project_PRN222_G5.BusinessLogic.Extensions
@using Project_PRN222_G5.Web.Utilities
@model object

@{
    var props = Model.GetType().GetProperties();
}

<table class="table table-bordered table-hover">
    <tbody>
    @foreach (var prop in props)
    {
        var displayName = HtmlUtil.GetDisplayName(prop);
        var value = prop.GetValue(Model);
        var imageAttr = prop.GetCustomAttribute<ImageDisplayAttribute>();

        <tr>
            <th>@displayName</th>
            <td>
                @if (imageAttr is not null && value is string path && !string.IsNullOrWhiteSpace(path))
                {
                    var style = $"max-height:{imageAttr.MaxHeight}px;";

                    switch (imageAttr.Shape)
                    {
                        case ImageShape.Circle:
                            style += " border-radius:50%; object-fit:cover;";
                            break;
                        case ImageShape.Square:
                            style += $" width:{imageAttr.MaxHeight}px; height:{imageAttr.MaxHeight}px; object-fit:cover;";
                            break;
                        case ImageShape.Rectangle:
                        default:
                            break;
                    }

                    <img src="@path"
                         alt="@(!string.IsNullOrWhiteSpace(imageAttr.Alt) ? imageAttr.Alt : displayName)"
                         class="@imageAttr.CssClass"
                         style="@style" />
                }
                else
                {
                    @Html.Raw(HtmlUtil.FormatValue(value))
                }
            </td>
        </tr>
    }
    </tbody>
</table>